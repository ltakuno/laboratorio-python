{
  "basicos": {
    "soma": {
      "titulo": "Exercício: Soma",
      "descricao": "Implemente a função <code>soma(a, b)</code> que retorna a soma de dois números inteiros.",
      "codigo": "def soma(a, b):\n    pass",
      "categoria": "Básicos",
      "testes": [
        { "entrada": "soma(1, 2)", "esperado": "3" },
        { "entrada": "soma(-1, 1)", "esperado": "0" },
        { "entrada": "soma(0, 0)", "esperado": "0" }
      ]
    },
    "dobro": {
      "titulo": "Exercício: Dobro",
      "descricao": "Implemente a função <code>dobro(n)</code> que retorna o dobro de um número.",
      "codigo": "def dobro(n):\n    pass",
      "categoria": "Básicos",
      "testes": [
        { "entrada": "dobro(2)", "esperado": "4" },
        { "entrada": "dobro(0)", "esperado": "0" },
        { "entrada": "dobro(-3)", "esperado": "-6" }
      ]
    },
    "subtracao": {
      "titulo": "Exercício: Subtração",
      "descricao": "Implemente a função `subtracao(a, b)` que retorna a subtração de dois números inteiros.",
      "codigo": "def subtracao(a, b):\n    pass",
      "categoria": "Básicos",
      "testes": [
        { "entrada": "subtracao(5, 2)", "esperado": "3" },
        { "entrada": "subtracao(10, 3)", "esperado": "7" },
        { "entrada": "subtracao(-5, 5)", "esperado": "-10" }
      ]
    },
    "multiplicacao": {
      "titulo": "Exercício: Multiplicação",
      "descricao": "Implemente a função `multiplicacao(a, b)` que retorna a multiplicação de dois números inteiros.",
      "codigo": "def multiplicacao(a, b):\n    pass",
      "categoria": "Básicos",
      "testes": [
        { "entrada": "multiplicacao(3, 4)", "esperado": "12" },
        { "entrada": "multiplicacao(5, 0)", "esperado": "0" },
        { "entrada": "multiplicacao(-2, 3)", "esperado": "-6" }
      ]
    }
  },
  "condicionais": {
    "eh_par": {
      "titulo": "Exercício: É Par",
      "descricao": "Implemente a função `eh_par(numero)` que retorna `True` se o número for par e `False` caso contrário.",
      "codigo": "def eh_par(numero):\n    pass",
      "categoria": "Condicionais",
      "testes": [
        { "entrada": "eh_par(4)", "esperado": "True" },
        { "entrada": "eh_par(7)", "esperado": "False" },
        { "entrada": "eh_par(0)", "esperado": "True" }
      ]
    },
    "maior_numero": {
      "titulo": "Exercício: Maior Número",
      "descricao": "Implemente a função `maior_numero(a, b)` que retorna o maior entre dois números.",
      "codigo": "def maior_numero(a, b):\n    pass",
      "categoria": "Condicionais",
      "testes": [
        { "entrada": "maior_numero(5, 8)", "esperado": "8" },
        { "entrada": "maior_numero(10, 3)", "esperado": "10" },
        { "entrada": "maior_numero(-2, -7)", "esperado": "-2" }
      ]
    }
  },
  "strings": {
    "inverte_string": {
      "titulo": "Exercício: Inverte String",
      "descricao": "Implemente a função `inverte_string(s)` que retorna a string invertida.",
      "codigo": "def inverte_string(s):\n    pass",
      "categoria": "Strings",
      "testes": [
        { "entrada": "inverte_string(\"abc\")", "esperado": "\"cba\"" },
        { "entrada": "inverte_string(\"hello\")", "esperado": "\"olleh\"" },
        { "entrada": "inverte_string(\"\")", "esperado": "\"\"" }
      ]
    }
  }
}
